---
- hosts: rpi42
  vars:
    packages: true
    files_mountpoint: /files
    tm_mountpoint: /timemachine
  remote_user: bazilio
  become: yes
  tasks:

  - name: "install packages"
    apt:
      update_cache: yes
      name:
        - adwaita-icon-theme
        - aptitude
        - avahi-daemon
        - docker-compose
        - docker.io
        - ethtool
        - fake-hwclock
        - git
        - hdparm
        - htop
        - iotop
        - libasound2
        - libatspi2.0-0
        - libgbm1
        - libgl1-mesa-dri
        - libgl1-mesa-glx
        - libglib2.0-bin
        - libgtk-3-0
        - libnotify4
        - libxtst6
        - locales
        - mc
        - motion
        - ntp
        - ntpdate
        - portmap
        - prometheus-node-exporter
        - rename
        - rfkill
        - rsync
        - samba
        - screen
        - smartmontools
        - sudo
        - tmux
        - usbutils
        - vim
        - wget
        - xdg-utils
      state: latest

    tags:
      - packages
    when: packages

### s alias
  - name: "Add aliases to /etc/profile"
    blockinfile:
      path: /etc/profile
      insertafter: EOF
      block: |
        alias s='sudo su -'
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      backup: yes

### sudoers
  - name: "sudoers NOPASSWD"
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%sudo\s'
      line: '%sudo ALL=(ALL)  NOPASSWD: ALL'

### users
  - name: "Create user"
    user:
      name: bazilio
      # password created with:
      # python -c 'import crypt; print crypt.crypt("This is my Password", "$1$SomeSalt$")'
      password: $1$Ub9VzL9S$9TF/6iNcJp4j5VixhZksK0
      home: "/home/bazilio"
      comment: "Hello there"
      shell: "/bin/bash"
      groups:
      - sudo
      - adm
      - dialout
      - cdrom
      - audio
      - video
      - plugdev
      - games
      - users
      - input
      - netdev

  - name: "Create bazilio user .ssh folder"
    file:
      path: "/home/bazilio/.ssh"
      state: directory
      owner: bazilio
      group: bazilio
      mode: 0700


  - name: "Create bazilio user authorized_keys file"
    copy:
      dest: "/home/bazilio/.ssh/authorized_keys"
      src: ./files/authorized_keys.bazilio_user
      owner: bazilio
      group: bazilio
      mode: 0600


### boot config
  - name: Place config.txt
    copy:
      dest: "/boot/config.txt"
      src: ./files/boot/config.txt
      owner: root
      group: root
      mode: 0755

### mounts
  - name: "Create files mount folder"
    file: path="{{ files_mountpoint }}" state=directory mode=777 owner=nobody group=nogroup

  - name: "Mount /files"
    mount:
      path: "{{ files_mountpoint }}"
      src: UUID=e1814c17-048a-4d29-8515-a60b76f992bf
      fstype: ext4
      state: mounted
      opts: defaults,noatime

### Samba
  - name: "Render SMB config"
    template:
      dest: /etc/samba/smb.conf
      src: ./templates/smb.conf.j2
      backup: yes
      owner: root
      group: root
      mode: 0644
    register: smbconf
    tags:
      - samba

  - name: restart samba
    systemd:
      name: smbd.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: smbconf.changed
    tags:
      - samba

### prometheus-node-exporter
  - name: "prometheus-node-exporter default settings"
    copy:
      dest: "/etc/default/prometheus-node-exporter"
      src: ./files/prometheus-node-exporter
      owner: root
      group: root
      mode: 0644
    register: prometheus_node_exporter_config

  - name: "Restart prometheus-node-exporter service"
    systemd:
      name: prometheus-node-exporter.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: prometheus_node_exporter_config.changed

  - name: "Place start-chia.sh helper"
    copy:
      dest: /usr/local/bin/start-chia.sh
      src: ./files/start-chia.sh
      owner: bazilio
      group: bazilio
      mode: 0755

  - name: "Place start-chia systemd service file"
    copy:
      dest: /lib/systemd/system/start-chia.service
      src: ./files/start-chia.service
      owner: root
      group: root
      mode: 0644
    register: chiaservice

  - name: "Restart start-chia service"
    systemd:
      name: start-chia.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: chiaservice.changed
