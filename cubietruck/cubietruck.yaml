---
- hosts: cb
  vars:
    packages: true
    time_sync: false
    hdd_mountpoint: /mnt/torrent
    tm_mountpoint: /mnt/TimeMachine
    tm500_mountpoint: /mnt/500GB
  remote_user: root
  tasks:

  - name: "install packages"
    apt:
      update_cache: no
      name:
        - mc
        - screen
        - htop
        - iotop
        - console-log
        - smartmontools
        - ntpdate
        - tmux 
        - git
        - samba
        - transmission-daemon
        - transmission-cli
        - prometheus-node-exporter
        - avahi-daemon
        - netatalk
        - hdparm
      state: latest
    tags:
      - packages
    when: packages

  - name: "remove packages"
    apt:
      update_cache: no
      name:
        - bluez
        - bluez-tools
      state: absent
      purge: yes

  - name: "Stop ntpd"
    service: name=ntp state=stopped
    tags:
      - time
    when: time_sync

  - name: "Sync time"
    shell: date; ntpdate pool.ntp.org; date
    notify: restart ntp
    tags:
      - time
    when: time_sync

### leds
  - name: "Set LED triggers"
    blockinfile:
      path: /etc/rc.local
      insertbefore: "exit\ 0"
      block: |
        # set led triggers
        echo ide-disk > /sys/class/leds/cubietruck\:green\:usr/trigger
        echo cpu1 > /sys/class/leds/cubietruck\:orange\:usr/trigger
        echo cpu0 > /sys/class/leds/cubietruck\:white\:usr/trigger
        echo mmc0 > /sys/class/leds/cubietruck\:blue\:usr/trigger
        # cpufreq
        echo ondemand > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
        echo 1008000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
        echo 408000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
        echo 25 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
        echo 10 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
        echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/io_is_busy
        #/sbin/hdparm -B 128 -S 180 /dev/sda
        # Quake3 server
        /usr/bin/sudo -u root /bin/bash -lc "/usr/bin/screen -dm -S q3 /root/torrent/.q3a/ioq3/build/release-linux-arm/ioq3ded.arm +exec q3server.cfg 2>&1 > /root/torrent/.q3a/screen.log"

      marker: "# {mark} ANSIBLE MANAGED BLOCK"


### mounts
  - name: "Create torrent mount"
    file: path="{{ hdd_mountpoint }}" state=directory mode=777 owner=root
  - name: "Symlink {{ hdd_mountpoint }} to /torrent"
    file: src="{{ hdd_mountpoint }}" dest=/torrent state=link
  - name: "Create TimeMachine500 mount"
    file: path="{{ tm500_mountpoint }}" state=directory mode=777 owner=root

  - name: "Mount /torrent"
    mount:
      path: "{{ hdd_mountpoint }}"
      src: UUID=7a089d7e-646a-40bc-97c5-f5ab2f8e2ebb
      fstype: ext4
      state: mounted
      opts: defaults,noatime

  - name: "Mount TimeMachine"
    mount:
      path: "{{ tm_mountpoint }}"
      src: UUID=c46337c1-d3fb-4b0e-a727-42a7cc13e047
      fstype: ext4
      state: absent
      opts: defaults,user_xattr

  - name: "Mount TimeMachine500"
    mount:
      path: "{{ tm500_mountpoint }}"
      src: UUID=976c1879-4191-4422-aab7-c87d628144de
      fstype: ext4
      state: mounted
      opts: defaults,user_xattr

### users
  - name: "Create git user"
    user:
      name: git
      home: "{{ hdd_mountpoint }}/.user_git"
      comment: "user for git repos"
  - name: "Create git user .ssh folder"
    file:
      path: "{{ hdd_mountpoint }}/.user_git/.ssh"
      state: directory
      recurse: no
      owner: git
      group: git
      mode: 0700
  - name: "Create git user authorized_keys file"
    copy:
      dest: "{{ hdd_mountpoint }}/.user_git/.ssh/authorized_keys"
      src: ./files/authorized_keys.git_user
      owner: git
      group: git
      mode: 0600
  - name: "Symlink git user home to /home/git"
    file: src="{{ hdd_mountpoint }}/.user_git" dest=/home/git state=link

### Resilio Sync
  - name: "Add Resilio Sync apt key"
    apt_key:
      url: https://linux-packages.resilio.com/resilio-sync/key.asc
      state: present
    tags:
      - resilio-sync

  - name: "Add Resilio Sync apt repository"
    apt_repository:
      repo: deb [arch=armhf] http://linux-packages.resilio.com/resilio-sync/deb resilio-sync non-free
      update_cache: yes
    tags:
      - resilio-sync

  - name: "Install Resilio Sync package"
    apt:
      name: resilio-sync
      state: latest
    tags:
      - resilio-sync

  - name: "Render Resilio Sync systemd service file"
    template:
      dest: /lib/systemd/system/resilio-sync.service
      src: ./templates/resilio-sync.service.j2
      owner: root
      group: root
      mode: 0644
    register: rslconfig
    tags:
      - resilio-sync

  - name: "Restart Resilio Sync service"
    systemd:
      name: resilio-sync.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: rslconfig.changed
    tags:
      - resilio-sync

### Samba
  - name: "Create cartoons folder"
    file:
      path: "{{ hdd_mountpoint }}/cartoons"
      state: directory
      recurse: no
      owner: nobody
      group: nogroup
      mode: 0777
    tags:
      - samba

  - name: "Render SMB config"
    template:
      dest: /etc/samba/smb.conf
      src: ./templates/smb.conf.j2
      backup: yes
      owner: root
      group: root
      mode: 0644
    register: smbconf
    tags:
      - samba

  - name: restart samba
    systemd:
      name: smbd.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: smbconf.changed
    tags:
      - samba

### Transmission
  - name: "Set sysctl config for Transmission"
    template:
      dest: /etc/sysctl.d/20-transmission.conf
      src: ./templates/20-transmission.conf.j2
      owner: root
      group: root
    register: transmission_sysctl
    tags:
      - transmission

  - name: "Apply sysctl config for Transmission"
    command: "/sbin/sysctl -p"
    when: transmission_sysctl.changed
    become: true
    become_user: root
    tags:
      - transmission

  - name: "Render Transmission config"
    template:
      dest: /etc/transmission-daemon/settings.json
      src: ./templates/transmission.settings.json.j2
      backup: yes
      owner: debian-transmission
      group: debian-transmission
      mode: 0600
    register: transmission_conf
    tags:
      - transmission

  - name: "Restart Transmission service"
    systemd:
      name: transmission-daemon.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: transmission_conf.changed or transmission_sysctl.changed
    tags:
      - transmission

### Transmission-pron
  - name: "Transmission-pron config dir"
    file: path="/etc/transmission-daemon-pron" state=directory mode=777 owner=debian-transmission
    tags:
      - transmission_pron

  - name: "Transmission-pron upload dir"
    file: path="{{ hdd_mountpoint }}/upload-pron" state=directory mode=777 owner=debian-transmission
    tags:
      - transmission_pron

  - name: "Render Transmission-pron systemd service file"
    template:
      dest: /lib/systemd/system/transmission-daemon-pron.service
      src: ./templates/transmission-daemon-pron.service.j2
      owner: root
      group: root
      mode: 0644
    register: transmission_pron_systemd
    tags:
      - transmission_pron

  - name: "Render Transmission-pron config"
    template:
      dest: /etc/transmission-daemon-pron/settings.json
      src: ./templates/transmission-pron.settings.json.j2
      backup: yes
      owner: nobody
      group: nogroup
      mode: 0600
    register: transmission_pron_conf
    tags:
      - transmission_pron

  - name: "Restart Transmission-pron service"
    systemd:
      name: transmission-daemon-pron.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: transmission_pron_conf.changed or transmission_sysctl.changed or transmission_pron_systemd.changed
    tags:
      - transmission_pron

### Time Machine
  - name: "Render Netatalk config"
    template:
      dest: /etc/netatalk/afp.conf
      src: ./templates/afp.conf.j2
      backup: yes
      owner: root
      group: staff
      mode: 0644
    register: afp_conf
    tags:
      - timemachine

  - name: "Restart Netatalk service"
    systemd:
      name: netatalk.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: afp_conf.changed
    tags:
      - timemachine

### HDD settings
#  - name: "Setup disable HDD led cron"
#    cron:
#      name: "hdd_led_disable"
#      hour: "22"
#      minute: "0"
#      job: "echo none > /sys/class/leds/cubietruck\\:green\\:usr/trigger"
#    tags:
#      - cron
#
#  - name: "Setup enable HDD led cron"
#    cron:
#      name: "hdd_led_enable"
#      hour: "6"
#      minute: "0"
#      job: "echo ide-disk > /sys/class/leds/cubietruck\\:green\\:usr/trigger"
#    tags:
#      - cron

  - name: "Render hdparm config"
    template:
      dest: /etc/hdparm.conf
      src: ./templates/hdparm.conf.j2
      backup: yes
      owner: root
      group: root
      mode: 0644
    register: hdparm_conf
    tags:
      - hdparm

  - name: "console-log config"
    copy:
      dest: "/etc/console-log.conf"
      src: ./files/console-log.conf
      owner: root
      group: root
      mode: 0644
    register: console_log_config

  - name: "Restart console-log service"
    systemd:
      name: console-log.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: console_log_config.changed

  - name: "Kernel modules blackist"
    copy:
      dest: "/etc/modprobe.d/blacklist.conf"
      src: ./files/blacklist.conf
      owner: root
      group: root
      mode: 0644
    register: kernel_module_blacklist

  - name: "Re-generate initramfs"
    command: "/usr/sbin/update-initramfs -u"
    become: yes
    when: kernel_module_blacklist.changed

  - name: "prometheus-node-exporter default settings"
    copy:
      dest: "/etc/default/prometheus-node-exporter"
      src: ./files/prometheus-node-exporter
      owner: root
      group: root
      mode: 0644
    register: prometheus_node_exporter_config

  - name: "Restart prometheus-node-exporter service"
    systemd:
      name: prometheus-node-exporter.service
      daemon_reload: yes
      enabled: yes
      masked: no
      state: restarted
    when: prometheus_node_exporter_config.changed

  handlers:
    - name: restart ntp
      service: name=ntp state=restarted


      
